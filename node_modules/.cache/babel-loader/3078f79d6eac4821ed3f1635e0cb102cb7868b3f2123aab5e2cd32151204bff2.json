{"ast":null,"code":"var _jsxFileName = \"F:\\\\Quizzapp\\\\quizzapp\\\\src\\\\Subject.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Html() {\n  _s();\n  const htmlQuestions = [{\n    qno: 'Q.1-)',\n    quest: 'What does HTML stand for?',\n    optA: 'Hyper Text Markup Language',\n    optB: 'Hyperlinks and Text Markup Language',\n    optC: 'Home Tool Markup Language',\n    optD: 'Hyperlinking Text Management Language',\n    corrans: 'A'\n  }, {\n    qno: 'Q.2-)',\n    quest: 'Who is making the Web standards?',\n    optA: 'Mozilla',\n    optB: 'Microsoft',\n    optC: 'Google',\n    optD: 'The World Wide Web Consortium',\n    corrans: 'D'\n  }, {\n    qno: 'Q.3-)',\n    quest: 'Choose the correct HTML element for the largest heading:',\n    optA: '<h1>',\n    optB: '<heading>',\n    optC: '<h6>',\n    optD: '<head>',\n    corrans: 'A'\n  }, {\n    qno: 'Q.4-)',\n    quest: 'What is the correct HTML element for inserting a line break?',\n    optA: '<br>',\n    optB: '<lb>',\n    optC: '<break>',\n    optD: '<ln>',\n    corrans: 'A'\n  }, {\n    qno: 'Q.5-)',\n    quest: 'Which character is used to indicate an end tag?',\n    optA: '*',\n    optB: '/',\n    optC: '!',\n    optD: '\\\\',\n    corrans: 'B'\n  }];\n  const [showQuestions, setShowQuestions] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Html Content\", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setShowQuestions(true),\n      children: \"Show HTML Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), showQuestions && /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [htmlQuestions.map((q, index) => /*#__PURE__*/_jsxDEV(Question, {\n        qno: q.qno,\n        quest: q.quest,\n        optA: q.optA,\n        optB: q.optB,\n        optC: q.optC,\n        optD: q.optD,\n        corrans: q.corrans\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Html, \"wLAYYdn4lyE9qLc7yYRTZBQMKA8=\");\n_c = Html;\nvar _c;\n$RefreshReg$(_c, \"Html\");","map":{"version":3,"names":["Html","_s","htmlQuestions","qno","quest","optA","optB","optC","optD","corrans","showQuestions","setShowQuestions","useState","_jsxDEV","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","q","index","Question","_c","$RefreshReg$"],"sources":["F:/Quizzapp/quizzapp/src/Subject.js"],"sourcesContent":["\r\nexport function Html() {\r\n    const htmlQuestions = [\r\n        {\r\n            qno: 'Q.1-)',\r\n            quest: 'What does HTML stand for?',\r\n            optA: 'Hyper Text Markup Language',\r\n            optB: 'Hyperlinks and Text Markup Language',\r\n            optC: 'Home Tool Markup Language',\r\n            optD: 'Hyperlinking Text Management Language',\r\n            corrans: 'A'\r\n        },\r\n        {\r\n            qno: 'Q.2-)',\r\n            quest: 'Who is making the Web standards?',\r\n            optA: 'Mozilla',\r\n            optB: 'Microsoft',\r\n            optC: 'Google',\r\n            optD: 'The World Wide Web Consortium',\r\n            corrans: 'D'\r\n        },\r\n        {\r\n            qno: 'Q.3-)',\r\n            quest: 'Choose the correct HTML element for the largest heading:',\r\n            optA: '<h1>',\r\n            optB: '<heading>',\r\n            optC: '<h6>',\r\n            optD: '<head>',\r\n            corrans: 'A'\r\n        },\r\n        {\r\n            qno: 'Q.4-)',\r\n            quest: 'What is the correct HTML element for inserting a line break?',\r\n            optA: '<br>',\r\n            optB: '<lb>',\r\n            optC: '<break>',\r\n            optD: '<ln>',\r\n            corrans: 'A'\r\n        },\r\n        {\r\n            qno: 'Q.5-)',\r\n            quest: 'Which character is used to indicate an end tag?',\r\n            optA: '*',\r\n            optB: '/',\r\n            optC: '!',\r\n            optD: '\\\\',\r\n            corrans: 'B'\r\n        }\r\n    ];\r\n\r\n    const [showQuestions, setShowQuestions] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            Html Content\r\n            <button type='button' onClick={() => setShowQuestions(true)}>Show HTML Questions</button>\r\n            {showQuestions && (\r\n                <form>\r\n                    {htmlQuestions.map((q, index) => (\r\n                        <Question\r\n                            key={index}\r\n                            qno={q.qno}\r\n                            quest={q.quest}\r\n                            optA={q.optA}\r\n                            optB={q.optB}\r\n                            optC={q.optC}\r\n                            optD={q.optD}\r\n                            corrans={q.corrans}\r\n                        />\r\n                    ))}\r\n                    <br /><br />\r\n                    <button type='submit'>Submit Question</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}